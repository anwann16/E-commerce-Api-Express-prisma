generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @unique @default(uuid())
  username      String         @unique
  email         String         @unique
  profile       Profile?
  credential_Id String         @unique
  credential    UserCredential @relation(fields: [credential_Id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  transactions  Transaction[]
}

model Profile {
  id       String  @unique @default(uuid())
  fullname String?
  email    String  @unique
  age      Int?
  avatar   String?
  user_id  String  @unique
  user     User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model UserCredential {
  id       String @unique @default(uuid())
  email    String @unique
  password String
  user     User?
}

model Product {
  id                 String              @unique @default(uuid())
  name               String
  description        String?
  price              Float
  category_id        String
  category           Category            @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  stock              Int
  image              String
  transaction_detail TransactionDetail[]
}

model Transaction {
  id                  String              @unique @default(uuid())
  user                User                @relation(fields: [user_id], references: [id])
  user_id             String
  transaction_date    DateTime            @default(now())
  total_amount        Float
  transaction_details TransactionDetail[]
}

model TransactionDetail {
  id             String      @unique @default(uuid())
  transaction    Transaction @relation(fields: [transaction_id], references: [id])
  transaction_id String
  product        Product     @relation(fields: [product_id], references: [id])
  product_id     String
  quantity       Int
  price          Float
}

model Category {
  id       String    @unique @default(uuid())
  name     String    @unique
  products Product[]
}
